version: '3.9'

services:
  # App services
  robot-factory:
    image: robot-factory:0.0.1
    container_name: robot-factory
    ports:
      - "9081:9081"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
    restart: always
    networks:
      - saga-net

  robot-shop:
    image: robot-shop:0.0.1
    container_name: robot-shop
    ports:
      - "8082:8082"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
    restart: always
    networks:
      - saga-net

# Infrastructure
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - saga-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - saga-net

  rabbitmq:
    image: rabbitmq:3.10.7-management-alpine
    container_name: rabbitmq
    restart: always
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 314572 # 300 MB
    volumes:
      - ./config/rabbitmq/init/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./config/rabbitmq/init/definitions.json:/etc/rabbitmq/definitions.json:ro
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - saga-net

networks:
  saga-net:
    driver: bridge

#  Validate docker-compose file and configuration
#  $ docker-compose config

#  Builds, (re)creates, starts, and attaches to containers for a service.
#  $ docker-compose up -d

#  Lists containers
#  $ docker-compose ps

#  Stops running containers without removing them
#  $ docker-compose stop

#  Starts existing containers for a service
#  $ docker-compose start

#  Stops containers and removes containers, networks, volumes, and images created by - up
#  $ docker-compose down